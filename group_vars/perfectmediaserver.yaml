---

target_os: proxmox
main_username: pms

# grog.package
package_list:
  - name: bash-completion
  - name: curl
  - name: dnsutils
  - name: fio
  - name: git
  - name: hddtemp
  - name: htop
  - name: ffmpeg
  - name: iftop
  - name: intel-gpu-tools
  - name: iotop
  - name: ipmitool
  - name: lm-sensors
  - name: mc
  - name: mergerfs
  - name: mutt
  - name: ncdu
  - name: net-tools
  - name: nut
  - name: nut-client
  - name: nut-server
  - name: nfs-kernel-server
  - name: nmap
  - name: nvme-cli
  - name: openssh-server
  #- name: open-vm-tools #vmware
  - name: python3
  - name: python-setuptools
  #- name: qemu-guest-agent
  #- name: sanoid
  - name: screen
  #- name: ssh-import-id
  - name: smartmontools
  - name: sudo
  - name: tmux
  - name: tree
  - name: wget
  #- name: wireguard-tools
  - name: xfsprogs
  - name: zfsutils-linux

# ironicbadger.bash-aliases (formerly ferrarimarco.bash-aliases)
bash_aliases:
  - { alias: "ll", command: "ls -lF "}
  - { alias: "dtail", command: "docker logs -tf --tail='50' " }
  - { alias: "dstop", command: "docker stop `docker ps -aq`" }
  - { alias: "drm", command: "docker rm `docker ps -aq`" }
  - { alias: "dcp", command: "docker compose -f ~/docker-compose.yml "}
  - { alias: "dcporph", command: "docker compose -f ~/docker-compose.yml up -d --remove-orphans" }
  - { alias: "dprune", command: "docker image prune" }
  - { alias: "dprunesys", command: "docker system prune --all" }
  - { alias: "dtop", command: "docker run --name ctop  -it --rm -v /var/run/docker.sock:/var/run/docker.sock quay.io/vektorlab/ctop" }
  - { alias: "appdata", command: "cd /mnt/storage/appdata" }
  - { alias: "zspace", command: "zfs list -o space" }
  - { alias: "zsnap", command: "zfs list -o space | sort -k4 --human-numeric-sort" }
  - { alias: "dfclean", command: "df -h -x tmpfs -t fuse.mergerfs -t xfs -t ext4 | sort -k 6" }
  - { alias: "dffull", command: "df -h -x tmpfs -t fuse.mergerfs -t xfs -t ext4 -t zfs" }
  - { alias: "hdtemp", command: "sudo hddtemp -q /dev/sd[a,b,c]" }
  - { alias: "nvmetemp", command: "sudo /usr/sbin/nvme smart-log /dev/nvme0n1 | grep temperature" }

# perfectmediaserver
# snapraid_parity_disks:
  # - { path: /mnt/parity1, diskbyid: /dev/disk/by-id/ata-WDC_WD140EDGZ-11B1PA0_Y6GX1KWC, fs: ext4, opts: defaults, content: false }

snapraid_data_disks:
  - { path: /mnt/disk1, diskbyid: /dev/disk/by-id/ata-ST4000DM000-1F2168_W300LXEZ, fs: ext4, opts: defaults, content: true }
  - { path: /mnt/disk2, diskbyid: /dev/disk/by-id/ata-WDC_WD40EDAZ-11SLVB0_WD-WX72D50CPZDC, fs: ext4, opts: defaults, content: true }
  - { path: /mnt/disk3, diskbyid: /dev/disk/by-id/ata-ST4000DM000-1F2168_W300HT8Z, fs: ext4, opts: defaults, content: true }

fstab_mergerfs:
  - { source: "/mnt/disk*", mountpoint: "/mnt/storage", fs: fuse.mergerfs, opts: "use_ino,dropcacheonclose=true,cache.files=partial,defaults,allow_other,category.create=mfs,minfreespace=50G,fsname=mergerfs" }  

# ironicbadger.docker_compose_generator
appdata_path: /mnt/storage/appdata
storage_path: /mnt/storage
internal_storage_path: /storage
local_domain: "robinson.lan"

extra_mountpoints:
  - { path: "{{ storage_path }}" }

containers:
  ###
  - service_name: tr
    active: true
    image: traefik
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    extra_hosts:
      - host.docker.internal:172.17.0.1
    volumes:
      - "{{ appdata_path }}/traefik:/etc/traefik"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    restart: unless-stopped
  ###
  - service_name: heimdall
    active: true
    image: lscr.io/linuxserver/heimdall:latest
    labels:
      - "traefik.http.routers.heimdall.rule=Host(`{{ local_domain }}`)"
    environment:
      - TZ=America/Los_Angeles
    volumes:
      - "{{ appdata_path }}/heimdall:/config"
    restart: unless-stopped  
  ###
  - service_name: mealie
    active: true
    image: hkotel/mealie:v0.5.1
    labels:
      - "traefik.http.routers.mealie.rule=Host(`meals.{{ local_domain }}`)"
    environment:
      - DB_TYPE=sqlite
      - BASE_URL=/meals
    volumes:
      - "{{ appdata_path }}/mealie:/app/data"
    restart: unless-stopped  
  ###
  - service_name: jellyfin
    active: false
    image: jellyfin/jellyfin
    network_mode: host
    labels:
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.{{ local_domain }}`)"
      - traefik.http.services.jellyfin.loadbalancer.server.port=8096
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - "{{ appdata_path }}/jellyfin/config:/config"
      - "{{ appdata_path }}/jellyfin/cache:/cache"
      - "{{ storage_path }}:/media"
    restart: unless-stopped
  ###
  - service_name: syncthing
    active: true
    image: lscr.io/linuxserver/syncthing:latest
    network_mode: host
    labels:
      - "traefik.http.routers.syncthing.rule=Host(`syncthing.{{ local_domain }}`)"
      - traefik.http.services.syncthing.loadbalancer.server.port=8384
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - "{{ appdata_path }}/syncthing:/config"
      - "{{ storage_path }}/Sync:/data"
    restart: unless-stopped
  ###
  - service_name: archivebox
    active: true
    image: archivebox/archivebox:master
    command: 
      - server --quick-init 0.0.0.0:8000
    labels:
      - "traefik.http.routers.archivebox.rule=Host(`archive.{{ local_domain }}`)"
      - traefik.http.services.archivebox.loadbalancer.server.port=8000
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      - ALLOWED_HOSTS=*
      - MEDIA_MAX_SIZE=750m
    volumes:
      - "{{ appdata_path }}/archivebox:/data"
    restart: unless-stopped
  ###
  - service_name: transmission
    active: true
    image: haugene/transmission-openvpn
    cap_add:
      - NET_ADMIN
    labels:
      - "traefik.http.routers.transmission.rule=Host(`transmission.{{ local_domain }}`)"
      - traefik.http.services.transmission.loadbalancer.server.port=9091
    environment:
      - PUID=1000
      - PGID=1000
      - OPENVPN_PROVIDER=MULLVAD
      - OPENVPN_CONFIG=de_all
      - "OPENVPN_USERNAME={{ mullvad_username }}"
      - "OPENVPN_PASSWORD={{ mullvad_password }}"
      - LOCAL_NETWORK=192.168.1.0/24
      - "TRANSMISSION_DOWNLOAD_DIR=/storage/Downloads/"
      - "TRANSMISSION_INCOMPLETE_DIR=/storage/incomplete/"
    ports:
      - '9091:9091'
      - '9696:9696'
      - '8989:8989'
      - '7878:7878'
      - '8686:8686'
    volumes:
      - "{{ appdata_path }}/transmission:/config"
      - "{{ storage_path }}:{{ internal_storage_path }}"
    restart: unless-stopped
    sysctl:
      - "net.ipv6.conf.all.disable_ipv6=0"
  ###
  - service_name: prowlarr
    active: true
    image: linuxserver/prowlarr:develop
    labels:
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.{{ local_domain }}`)"
      - traefik.http.services.prowlarr.loadbalancer.server.port=9696
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - "{{ appdata_path }}/prowlarr:/config"
    restart: unless-stopped
    network_mode: "service:transmission"
    depends_on:
      - transmission
  ###
  - service_name: sonarr
    active: true
    image: linuxserver/sonarr
    labels:
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.{{ local_domain }}`)"
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - "{{ appdata_path }}/sonarr:/config"
      - "{{ storage_path }}:{{ internal_storage_path }}"
    restart: unless-stopped
    network_mode: "service:transmission"
    depends_on:
      - transmission
  ###
  - service_name: radarr
    active: true
    image: linuxserver/radarr
    labels:
      - "traefik.http.routers.radarr.rule=Host(`radarr.{{ local_domain }}`)"
      - traefik.http.services.radarr.loadbalancer.server.port=7878
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - "{{ appdata_path }}/radarr:/config"
      - "{{ storage_path }}:{{ internal_storage_path }}"
    restart: unless-stopped
    network_mode: "service:transmission"
    depends_on:
      - transmission
  ###
  - service_name: beets
    active: true
    image: lscr.io/linuxserver/beets:latest
    volumes:
      - "{{ appdata_path }}/beets:/config"
      - "{{ storage_path }}:{{ internal_storage_path }}"
    labels:
      - "traefik.http.routers.beets.rule=Host(`beets.{{ local_domain }}`)"
      - traefik.http.services.beets.loadbalancer.server.port=8337
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    restart: unless-stopped
  ###
  - service_name: calibre-web
    active: true
    image: lscr.io/linuxserver/calibre-web:latest
    volumes:
      - "{{ appdata_path }}/calibre-web:/config"
      - "{{ storage_path }}:{{ internal_storage_path }}"
    labels:
      - "traefik.http.routers.calibre-web.rule=Host(`calibreweb.{{ local_domain }}`)"
      - traefik.http.services.calibre-web.loadbalancer.server.port=8083
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      - DOCKER_MODS=linuxserver/mods:universal-calibre
    restart: unless-stopped
  ###
  - service_name: calibre
    active: true
    image: lscr.io/linuxserver/calibre:latest
    volumes:
      - "{{ appdata_path }}/calibre:/config"
      - "{{ storage_path }}:{{ internal_storage_path }}"
    labels:
      - "traefik.http.routers.calibre.rule=Host(`calibre.{{ local_domain }}`)"
      - traefik.http.services.calibre.loadbalancer.server.port=8080
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    restart: unless-stopped
  ###
  - service_name: freshrss
    active: true
    image: lscr.io/linuxserver/freshrss:latest
    volumes:
      - "{{ appdata_path }}/freshrss:/config"
    labels:
      - "traefik.http.routers.freshrss.rule=Host(`freshrss.{{ local_domain }}`)"
      - traefik.http.services.freshrss.loadbalancer.server.port=80
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    restart: unless-stopped
  ###
  - service_name: recoll
    active: true
    image: ngtmeaty/docker-recoll-webui:0.3
    volumes:
      - "{{ appdata_path }}/recoll:/root/.recoll"
      - "{{ storage_path }}:/books"
    labels:
      - "traefik.http.routers.recoll.rule=Host(`recoll.{{ local_domain }}`)"
      - traefik.http.services.recoll.loadbalancer.server.port=8080
    restart: unless-stopped
  ###
  - service_name: dozzle
    active: true
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.http.routers.dozzle.rule=Host(`dozzle.{{ local_domain }}`)"
      - traefik.http.services.dozzle.loadbalancer.server.port=8080
    restart: unless-stopped
  # ###
  # - service_name: nextcloud
  #   active: true
  #   image: nextcloud:stable
  #   depends_on:
  #     - mysql
  #   labels:
  #     - "traefik.http.routers.nc.rule=Host(`nc.{{ domain_cloud }}`)"
  #   volumes:
  #     - "{{ appdata_path }}/nextcloud:/var/www/html"
  #   restart: unless-stopped
  # ###
  # - service_name: mysql
  #   active: true
  #   image: mariadb
  #   ports:
  #     - 3306:3306
  #   environment:
  #     - "MYSQL_ROOT_PASSWORD={{ container_mysql_root_password }}"
  #     - "MYSQL_PASSWORD={{ container_mysql_password }}"
  #     - MYSQL_DATABASE=nextcloud
  #     - MYSQL_USER=nextcloud
  #   volumes:
  #     - "{{ appdata_path }}/mysql:/var/lib/mysql"
  #   restart: unless-stopped
  # ###
  # - service_name: librespeed
  #   active: true
  #   image: linuxserver/librespeed
  #   ports:
  #     - 8008:80
  #   labels:
  #     - "traefik.http.routers.librespeed.rule=Host(`speedtest.m.{{ local_domain }}`)"
  #   environment:
  #     - MODE=standalone
  #     - TELEMETRY=true
  #     - "PASSWORD={{ librespeed_password }}"
  #   include_global_env_vars: true
  #   restart: unless-stopped
  # ###
  # - service_name: lychee
  #   active: true
  #   image: lycheeorg/lychee
  #   labels:
  #     - "traefik.http.routers.lychee.rule=Host(`gallery.m.{{ local_domain }}`)"
  #   depends_on:
  #     - mysql
  #   volumes:
  #     - "{{ appdata_path }}/lychee/config:/config"
  #     - "{{ appdata_path }}/lychee/uploads:/uploads"
  #     - "{{ appdata_path }}/lychee/sym:/sym"
  #   environment:
  #     - PHP_TZ=America/Los_Angeles
  #     - DB_CONNECTION=mysql
  #     - DB_HOST=mysql
  #     - DB_PORT=3306
  #     - DB_USERNAME=lychee
  #     - DB_DATABASE=lychee
  #     - "DB_PASSWORD={{ container_mysql_password }}"
  #   include_global_env_vars: true
  #   restart: unless-stopped
  # ###
  # - service_name: paperless
  #   active: false
  #   image: ghcr.io/paperless-ngx/paperless-ngx:latest
  #   labels:
  #     - "traefik.http.routers.paperless.rule=Host(`paperless.m.{{ local_domain }}`)"
  #   volumes:
  #     - "{{ appdata_path }}/paperless/config:/config"
  #     - "{{ appdata_path }}/paperless/data:/data"
  #   environment:
  #     - PAPERLESS_CONSUMER_RECURSIVE=true
  #     - PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS=true
  #   include_global_env_vars: true
  #   restart: unless-stopped
  # ###
  # - service_name: abs
  #   active: true
  #   image: advplyr/audiobookshelf
  #   labels:
  #     - "traefik.http.routers.audiobookshelf.rule=Host(`abs.m.{{ local_domain }}`)"
  #   volumes:
  #     - "{{ storage_path }}/audiobooks/library:/audiobooks"
  #     - "{{ storage_path }}/audiobooks/podcasts:/podcasts"
  #     - "{{ appdata_path }}/audiobookshelf/metadata:/metadata"
  #     - "{{ appdata_path }}/audiobookshelf/config:/config"
  #   restart: unless-stopped
  # ###
  # - service_name: overseerr
  #   active: true
  #   image: sctx/overseerr:latest
  #   labels:
  #     - "traefik.http.routers.overseerr.rule=Host(`overseerr.m.{{ local_domain }}`)"
  #   volumes:
  #     - "{{ appdata_path }}/overseerr:/app/config"
  #   restart: unless-stopped

  # template for docker-compose services
  #
  ###
  # - service_name:
  #   active: false
  #   image:
  #   container_name: #optional - only required if diff to service_name
  #   labels:
  #     - traefik.enable=true
  #     - "traefik.http.routers.XXXXXXXX.rule=Host(`abs.m.{{ local_domain }}`)"
  #     #- traefik.http.routers.XXXXXXX.entrypoints=websecure
  #     #- traefik.http.routers.XXXXXXX.tls.certresolver=cloudflare
  #     - traefik.http.services.XXXXXXX.loadbalancer.server.port=80
  #     #- traefik.http.routers.XXXXXXX.middlewares=authelia@docker
  #   volumes:
  #     - "{{ appdata_path }}/app:/config"
  #   environment:
  #     -
  #   include_global_env_vars: #optional - defaults to false
  #   restart: unless-stopped
